generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         String @id @default(cuid())
  firstName  String
  lastName   String
  username   String @unique
  personalId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?
  role     Role      @relation(fields: [roleId], references: [id], onUpdate: Cascade)
  roleId   String
  reports  Report[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Workstation {
  id          String  @id @default(cuid())
  name        String  @unique
  displayName String  @unique
  type        String  @default("Mobile")
  description String? @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  reports   Report[]
}

model Report {
  id                String   @id @default(cuid())
  startDate         DateTime
  endDate           DateTime
  reasonForDowntime String
  storageLocation   String?
  duration          Int      @default(3)
  details           String?
  status            String   @default("Pending")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  workstation   Workstation @relation(fields: [workstationId], references: [id], onUpdate: Cascade)
  workstationId String
  owner         User        @relation(fields: [ownerId], references: [id], onUpdate: Cascade)
  ownerId       String
}

model Role {
  id          String  @id @default(cuid())
  name        String  @unique
  displayName String  @unique
  description String? @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User[]
}
